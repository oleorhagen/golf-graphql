


type Player {
  name: String!
  scorecards: [Scorecard]
}

type Scorecard {
  id: ID!
  tournament_id: ID!
  handicap: Int!
  course_name: String!
  player: Player!
}

type Course {
  name: String!
  holes: [Hole!]
}

type Hole {
  nr: Int!
}

scalar Time

type Tournament {
  id: ID!
  name: String!
  year: Time!
}

type Query {
  players: [Player]
  tournaments: [Tournament]
  scorecards: [Scorecard]
}

input NewPlayer {
  name: String!
}

type Mutation {
  createPlayer(input: NewPlayer!): Player!
}
